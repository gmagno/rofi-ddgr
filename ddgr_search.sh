#!/usr/bin/env bash

# Trigger with:
#   rofi -lines 5 -eh 3 -show ddgrsearch -modi "ddgrsearch:ddgr_search.sh"

# for detailed instructions check rofi-script docs:
# https://github.com/davatorium/rofi/blob/next/doc/rofi-script.5.markdown

# Environment variables:
# ROFI_RETV: an integer with the current state
#   0: Initial call of script.
#   1: Selected an entry.
#   2: Selected a custom entry.
#   10-28: Custom keybinding 1-19 ( need to be explicitely enabled by script ).

# ROFI_INFO: is set when an entry is selected. It's set with the parameter
# `info`. Example:
# Selecting the entry generated by:
#   `echo -en "aap\0icon\x1ffolder\x1finfo\x1ftest\n"`
# would set ROFI_INFO with "test"

# Set the prompt string and delimiter. The delimiter is set to `;` so that we
# can have multi-line entries
echo -en "\0prompt\x1fddgr\n"
echo -en "\0delim\x1f;"

# Check current state and act accordingly
if [ "$ROFI_RETV" -eq "1" ]; then
    # An entry was selected, so just open the browser
    # Using python for compatibility purposes, across OSes
    coproc ( python -m webbrowser "$ROFI_INFO"  > /dev/null  2>&1 ) || true
fi
if [ "$ROFI_RETV" -eq "2" ]; then
# The search box was populated and returned. Trigger the search engine!
# Using printf to escape "$@" which might contain special characters like `!`
ddgr -n5 -x -C --json $(printf '%q' "$@") | python3 <(cat<< EOF
import sys
import json

def parse_json(json_str):
    json_dict = json.loads(json_str)
    elems = []
    for e in json_dict:
        title = e['title'].replace(';', ',').strip()
        url = e['url'].replace(';', ',').strip()
        abstract = e['abstract'].replace(';', ',').strip() + f"\0info\x1f{url};"
        elems.append((title, url, abstract))
    return elems

def print_entries(elems):
    for t, u, a in elems:
        print(f"* {t}")
        print(f"  {u}")
        print(f"  {a}", end='')

def main():
    data = sys.stdin.read()
    entries = parse_json(data)
    print_entries(entries)

if __name__ == '__main__':
    try:
        main()
    except:
        pass
EOF
)
fi
